# Configuration file for quaestor console application
# This file will be searched in the directory provided by the --configDir command line option
# If --configDir is not specified it is expected in the current directory.
#
# --------------------------------------------------------
# Configuration for service discovery / load balancer mode
# This section is relevant if quaestor is started with the 'load-balancer' option
serverConfig:

  # The host name. Note that in case TLS is used (i.e. a certificate is specified) this must be
  # identical to the certificate's subject alternative name.
  hostName: localhost

  # The port.
  port: 5150
  
  # The server certificate to be used for transport security (SSL/TLS). Specify the server certificate 
  # subject or thumbprint from the certificate store (Local Computer). Note that the certificate's 
  # private key must be accessible to this executable, unless the --key parameter is also specified. 
  # Alternatively this can be a PEM file containing the certificate chain (including the root 
  # certificate shared with the client).
  # Troubleshooting: If the specified thumbprint of the form 021f85bc637e33df8d8b1583ea2058e92c73335d
  # cannot be found the process probably must be run with elevated privileges. This is necessary to
  # extract the private key from the certificate file.
  certificate:
  
  # The private key PEM file (to remain on the server). If not specified and the certificate found in 
  # the store has a private exportable key the private key will be extracted from the certificate.
  privateKeyFile:

  # Enforce mutual authentication for transport layer security (SSL/TLS).
  enforceMutualTls: false

# --------------------------------------------------------
# Configuration section for the cluster management mode.
# # This section is relevant if quaestor is started with the 'cluster' option
clusterConfig:
  # The cluster name (global scope, primarily for display purposes).
  name: example_cluster
  # The heart beat interval in seconds.
  heartBeatIntervalSeconds: 30
  # The time-out for the health check performed on each agent during the heart beat
  memberResponseTimeOutSeconds: 5
  # The time-out for an agent shut-down in case it is not healthy (NOT IMPLEMENTED for local process)
  memberMaxShutdownTimeSeconds: 0
  # The number of times an agent re-start is attempted in case it is unhealthy or not running 
  memberMaxStartupRetries: 25

# List of agents that are managed by the cluster. Currently only local processes are supported.
# All agents are started by the cluster and checked for health during the heart beat.
# Some well-known agent types are:
# KeyValueStore (see below for an example): Etcd key-value store to be used as service registry
# Worker: Agents to be used in a local in-memory key-value store, in case no KeyValueStore agent
#         has been defined.
# However, any other agent type can be defined.
agents:
  Worker:
    # The (absolute or relative) path to the executable
    executablePath: ..\..\..\..\..\examples\HelloWorld\WorkerProcess\bin\Debug\net5.0\WorkerProcess.exe
    # The command line arguments. {HostName} and {Port} will be replaced by the respective values 
    # defined below.
    commandLineArguments: "{Port} 100"
    # The number of processes to be started. Typically the port list
    processCount: 4
    # Currently valid shutdown actions: {None, Kill}
    clusterShutdownAction: Kill
    # The dictionary of key: value pairs that should be added as environment variables
    environmentVariables:
      QUAESTOR_WORKER_EXIT_WHEN_UNHEALTHY: false
    # The host name to be used for health-checks and service discovery by the LoadBalancer
    hostName: localhost
    # Whether transport layer security (SSL/TLS) is used by the server.
    useTLS: false
    # The list of ports (must correspond with the processCount from above). If empty, ephemeral
    # ports are used.
    ports: [ 5161, 5162, 5163, 5164 ]
    # The list of services that respond to health check requests
    serviceNames:
    - Worker

  LoadBalancer:
    executablePath: quaestor.exe
    commandLineArguments: "load-balancer"
    processCount: 1
    clusterShutdownAction: Kill
    # The dictionary of key: value pairs that should be added as environment variables
    environmentVariables:
      QUAESTOR_LOGFILE_SUFFIX: Load_Balancing
      TEMP: C:\Temp
    hostName: localhost
    useTLS: false
    ports:
    - 5150
    serviceNames:
    - ServiceDiscoveryGrpc

#  # Example for a distributed keyvalue store to be used by the service discovery. Remove
#  # this section to use a local in-memory key-value store containing just the Worker agents.
#  KeyValueStore:
#    # Executable: https://github.com/etcd-io/etcd/releases/ (make sure it is in the path environment variable)
#    executablePath: etcd.exe
#    # It works without arguments but TLS is recommended. Example with auto-generated pem files: 
#    # --name cluster_test --data-dir C:\bin\etcd\data\topgis_qa.etcd --auto-tls --advertise-client-urls=https://127.0.0.1:2379 --listen-client-urls=https://127.0.0.1:2379
#    commandLineArguments:
#    processCount: 1
#    # Leave it running
#    clusterShutdownAction: None
#    hostName: 127.0.0.1
#    useTLS: false
#    # The official etcd default port for client requests is 2379
#    ports:
#    - 2379
#    # Etcd's health check implementation does not respond for specific service names, but it
#    # supports health check requests with empty service names.
#    serviceNames: []
